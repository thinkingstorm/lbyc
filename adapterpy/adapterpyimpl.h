#ifndef _ASYNIOIMPL_H_
#define _ASYNIOIMPL_H_

#include "stdafx.h"
#include <adapter/ipy.h>
#include <compat/getpath.hpp>
#include <Python.h>


class CAdapterpyImpl : 	public	IAdapterPy,
						public  IMdPlugin,
						public  IMdPluginRun,
						public	CUnknownImp
{
public:
	CAdapterpyImpl(void);
	virtual ~CAdapterpyImpl(void);
	

	UNKNOWN_IMP3_(IMdPlugin, IMdPluginRun,IAdapterPy);
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	std_method_impl init_class(IModuleBase* prot, IModuleBase* punkOuter);
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	std_method(Init)(void*);
	std_method(Uninit)();
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	std_method(Start)();
	std_method(Stop)();

	//////////////////////////////////////////////////////////////////////////
	std_method(RunFile)(const char* file);
	//////////////////////////////////////////////////////////////////////////
private:
	_lComPtr<IComRunningObjectTable>	m_pRot;
private:



};
#endif